#import <Foundation/Foundation.h>
#import "JSAPIPageResourceUserSidResource_.h"
#import "JSAPIResult.h"
#import "JSAPIUserSidResource.h"
#import "JSAPIApi.h"

/**
* Knetik Platform API Documentation latest 
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
*
* OpenAPI spec version: latest 
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface JSAPIAuthUsersApi: NSObject <JSAPIApi>

extern NSString* kJSAPIAuthUsersApiErrorDomain;
extern NSInteger kJSAPIAuthUsersApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(JSAPIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add a sid to a user
/// No error returned if the user already has the sid. <b>Resources Needed:</b> ROLE_SUPER_ADMIN
///
/// @param userId The resource type
/// @param sid The new sid for the user (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIUserSidResource*
-(NSURLSessionTask*) addSidWithUserId: (NSNumber*) userId
    sid: (JSAPIUserSidResource*) sid
    completionHandler: (void (^)(JSAPIUserSidResource* output, NSError* error)) handler;


/// Get a user sid
/// Http error 404 means the user does not have the sid<b>Resources Needed:</b> VIEW_ACCESS
///
/// @param userId The resource type
/// @param sid The resource id
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIUserSidResource*
-(NSURLSessionTask*) getSidWithUserId: (NSNumber*) userId
    sid: (NSString*) sid
    completionHandler: (void (^)(JSAPIUserSidResource* output, NSError* error)) handler;


/// List and search user sids
/// <b>Resources Needed:</b> VIEW_ACCESS
///
/// @param userId The resource type
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to resource:ASC)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPageResourceUserSidResource_*
-(NSURLSessionTask*) getSidsWithUserId: (NSNumber*) userId
    size: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(JSAPIPageResourceUserSidResource_* output, NSError* error)) handler;


/// Remove a sid from a user
/// No error returned if the suer does not have the sid. <b>Resources Needed:</b> ROLE_SUPER_ADMIN
///
/// @param userId The user id
/// @param sid The security id
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return void
-(NSURLSessionTask*) removeSidWithUserId: (NSNumber*) userId
    sid: (NSString*) sid
    completionHandler: (void (^)(NSError* error)) handler;



@end
